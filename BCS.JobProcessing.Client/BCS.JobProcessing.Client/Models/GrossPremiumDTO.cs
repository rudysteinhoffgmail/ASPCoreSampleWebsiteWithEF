// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace BCS.JobProcessing.Client.Models;

[Keyless]
[Table("GrossPremiumDTO", Schema = "Premium")]
public partial class GrossPremiumDTO
{
    public long? GrossPremiumKey { get; set; }

    public long? AccountingPeriodKey { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? PremiumDueStartDate { get; set; }

    public long? ResidentStateKey { get; set; }

    public long? CoverageCodeKey { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? PremiumDueEndDate { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? CollectedPremiumAmount { get; set; }

    public long? PolicyrenewalKey { get; set; }

    public long? SourceSystemXrefKey { get; set; }

    public long? CompanyKey { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? EarnedPremiumAmount { get; set; }

    public long? ManagementProgramKey { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? WrittenPremiumAmount { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? UnearnedPremiumAmount { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? UnpaidPremiumAmount { get; set; }

    public int? CollectedNumberOfInsured { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? BrokerPercent { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ActivityDate { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? AdminPercent { get; set; }

    public int? EarnedNumberOfInsured { get; set; }

    [Column(TypeName = "decimal(9, 6)")]
    public decimal? SourceCollectedNetPremiumAmount { get; set; }

    public int? WrittenNumberOfInsured { get; set; }

    public int? UnearnedNumberOfInsured { get; set; }

    public int? UnpaidNumberOfInsured { get; set; }

    [StringLength(55)]
    [Unicode(false)]
    public string TPACode { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? InvoiceDate { get; set; }

    public long? GutenbergGrossPremiumEntityId { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? GutenbergStartTs { get; set; }

    public long? GutenbergGrossPremiumManualEntityId { get; set; }

    public long? GutenbergPolicyEntityID { get; set; }

    public long? GutenbergRawPremiumEntityId { get; set; }

    public long? GutenbergrawUnpaidEntityId { get; set; }

    [StringLength(2000)]
    [Unicode(false)]
    public string GutenbergRawPremiumEntityIdList { get; set; }

    public long? PremiumTransactionCodeKey { get; set; }

    [StringLength(2000)]
    [Unicode(false)]
    public string GutenbergRawPremiumManualEntityIdList { get; set; }

    [StringLength(2000)]
    [Unicode(false)]
    public string GutenbergUnpaidPremiumEntityIdList { get; set; }

    [Required]
    [StringLength(3)]
    [Unicode(false)]
    public string GutenbergGrossPremiumSource { get; set; }

    public long? GutenbergEntityId { get; set; }

    [StringLength(2000)]
    [Unicode(false)]
    public string GutenbergUnearnedEntityIdList { get; set; }

    [StringLength(60)]
    [Unicode(false)]
    public string RSCTransactionID { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? RowInsertDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? RowUpdateDate { get; set; }

    public long? RowInsertLogId { get; set; }

    public long? RowUpdateLogId { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string RowInsertUsername { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string RowUpdateUsername { get; set; }

    [Required]
    [StringLength(1)]
    [Unicode(false)]
    public string RowIsCurrent { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? RowEffectiveDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? RowExpirationDate { get; set; }

    [Required]
    [StringLength(1)]
    [Unicode(false)]
    public string RowStatus { get; set; }
}